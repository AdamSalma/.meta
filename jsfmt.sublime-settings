{
  "autoformat": true,
  "extensions": [
    "js",
    "jsx",
    "sublime-settings"
  ],
  "options": {
    "indent": {
      "value": "    ",
    },
    "lineBreak": {
      "before": {
        // there is a conflict between the
        // lineBreak.after.FunctionDeclarationClosingBrace and the line break
        // around nodes logic, so we need to set "before" & "after" for all the
        // export/import declarations to override it
        "ExportAllDeclaration": 2,
        "ExportDefaultDeclaration": 2,
        "ExportNamedDeclaration": 2,
        "ModuleSpecifierClosingBrace": 1,
        "ModuleSpecifierComma": 0,
        "ObjectPatternClosingBrace": 1,
      },
      "after": {
        "ExportAllDeclaration": 2,
        "ExportDefaultDeclaration": 2,
        "ExportNamedDeclaration": 2,
        "ImportDeclaration": 2,
        "ModuleSpecifierOpeningBrace": 1,
        "ModuleSpecifierClosingBrace": -1,
        "ModuleSpecifierComma": 1,

        "ObjectPatternComma": 1,
        "ObjectPatternOpeningBrace": 1,

        "FunctionDeclarationOpeningBrace": -1
      }
    },
    "plugins": [
      "esformatter-jsx",
      "esformatter-quotes",
      "esformatter-align",
    // "esformatter-curly"
    ],
    "jsx": {
      "formatJSX": true, //Duh! that's the default
      "attrsOnSameLineAsTag": false, // move each attribute to its own line
      "maxAttrsOnTag": 0, // if lower or equal than 3 attributes, they will be kept on a single line
      "firstAttributeOnSameLine": false, // keep the first attribute in the same line as the tag
      "formatJSXExpressions": true, // default true, if false jsxExpressions won't be recursively formatted
      "JSXExpressionsSingleLine": true, // default true, if false the JSXExpressions might span several lines
      "alignWithFirstAttribute": false, // do not align attributes with the first tag
      "spaceInJSXExpressionContainers": "", // default to one space. Make it empty if you don't like spaces between JSXExpressionContainers
      "removeSpaceBeforeClosingJSX": false, // default false. if true <React.Something /> => <React.Something/>
      "closingTagOnNewLine": false, // default false. if true attributes on multiple lines will close the tag on a new line
      "JSXAttributeQuotes": "single", // possible values "single" or "double". Leave it as empty string if you don't want to modify the attributes' quotes
      "htmlOptions": {
      }
    },
    "quotes": {
      "type": "single",
      "avoidEscape": false
    },


  // other esformatter options
  }
}
